const Warehouse = require("../models/Warehouse");
const { v4: uuidv4 } = require("uuid");

const sampleControllerMethod = () => {};

// http://localhost:8080/api/warehouses
const getAll = (req, res) => {
  Warehouse.fetchAll()
    .then((warehouses) => res.status(200).json(warehouses))
    .catch((err) => res.status(500).json({ error: err.message }));
};

// http://localhost:8080/api/warehouses/bfc9bea7-66f1-44e9-879b-4d363a888eb4
const getOne = (req, res) => {
  Warehouse.where({ id: req.params.id })
    .fetchAll({ withRelated: ["inventories"] })
    .then((warehouse) =>
      res.status(200).json(warehouse.toJSON({ omitPivot: true }))
    )
    .catch((err) => res.status(400).json(err));
};

const addOne = (req, res) => {
  // I explicitly added a new ID when creating an object, so I NEED
  // to use .save(null, {method: "insert"}). If you've set it up
  // so you're using autogenerated IDs, .save() works fine.
  new Warehouse({ ...req.body, id: uuidv4() })
    .save(null, { method: "insert" })
    .then((newWarehouse) => res.status(201).json(newWarehouse))
    .catch((err) => res.status(500).json({ error: err.message }));
};

const editOne = (req, res) => {
  Warehouse.where("id", req.params.id)
    .fetch()
    .then((warehouse) => {
      const updates = Object.keys(req.body);
      updates.forEach(
        (update) => (warehouse.attributes[update] = req.body[update])
      );
      warehouse
        .save(warehouse.attributes)
        .then((updatedWarehouse) => res.status(200).json({ updatedWarehouse }));
    })
    .catch((err) => res.status(500).json({ error: err.message }));
};

const deleteOne = (req, res) => {
  Warehouse.where("id", req.params.id)
    .destroy()
    .then((deletedWarehouse) => res.status(200).json({ deletedWarehouse }))
    .catch((err) => res.status(500).json({ error: err.message }));
};

// If you had to add a many-to-many connection, you'd have to save it explicitly:
// https://stackoverflow.com/questions/28715684/bookshelf-js-how-to-save-many-to-many-relationship
// https://bookshelfjs.org/api.html#Collection-instance-attach

module.exports = { sampleControllerMethod, getAll, getOne, addOne, editOne };
